## corona-product cor-analysis


setwd('C:/Users/gpfl9/Desktop/bigdata_analysis/mini_project4')
product <- read.csv('온라인쇼핑몰_취급상품범위별_상품군별거래액(2019-2021).csv',header=T)

################################ setup before starting correlation analysis #########################
# same script of '온라인식품 line graph' in github repository


## transform table 

library(dplyr)
product_all <- product %>% filter(범위별=='계') # indexing 
product_all <- product_all[,-2]

#prod_2019 <- product_all[,c(1:13)]
prod_2020 <- product_all[,c(1,14:25)]
prod_2021 <- product_all[,c(1,26:ncol(product_all))]


library(tidyverse) 
                                        # convert column values into row names 
#prod_2019 <- prod_2019 %>% remove_rownames %>% column_to_rownames(var='상품군별')
prod_2020 <- prod_2020 %>% remove_rownames %>% column_to_rownames(var='상품군별')
prod_2021 <- prod_2021 %>% remove_rownames %>% column_to_rownames(var='상품군별')



# remove others except for top 3 variables

prod_2020 <- prod_2020[c(1,13,14,22),] # 합계, 음식료품, 음식서비스, 농축수산물
prod_2021 <- prod_2021[c(1,13,14,22),]



# t_prod_2019 <- as.data.frame(t(prod_2019))
# year1 <- rep('2019',times=12)
# t_prod_2019$year <- cbind(var2=year1)
# month1 <- 1:12
# t_prod_2019$month <- cbind(var1=month1)  


t_prod_2020 <- as.data.frame(t(prod_2020))
year1 <- rep('2020',times=12)
t_prod_2020$year <- cbind(var2=year1)
month1 <- 1:12
t_prod_2020$month <- cbind(var1=month1)  # add month & year column


t_prod_2021 <- as.data.frame(t(prod_2021))
year1 <- rep('2021',times=10)
t_prod_2021$year <- cbind(var2=year1)
month1 <- 1:10
t_prod_2021$month <- cbind(var1=month1)


# mean of column
t_prod_2020$합계평균 <- t_prod_2020$합계/20 
t_prod_2021$합계평균 <- t_prod_2021$합계/20

t_prod_2020 <- t_prod_2020[,-1]
t_prod_2020 <- t_prod_2020[,c(6,1,2,3,4,5)] # switch column positions

t_prod_2021 <- t_prod_2021[,-1]
t_prod_2021 <- t_prod_2021[,c(6,1,2,3,4,5)]


write.csv(t_prod_2019,'t_prod_2019.csv')
write.csv(t_prod_2019,'t_prod_2020.csv')
write.csv(t_prod_2019,'t_prod_2021.csv')


################################ correlation analysis #########################


t_prod_2020 <- cbind(t_prod_2020,corona_2020)
t_prod_2021 <- cbind(t_prod_2021,corona_2021)
corona_2020 <- c(0.9166667,121.1724138,205.1935484,29.5666667,24.3000000,44.9000000,
47.9354839,188.5483871,123.5666667,88.6129032,267.1666667,874.2903226)
corona_2021 <- c(540.2903,411.3214,439.0645,633.4333,585.9032,564.1667,
                 1356.6129,1731.0000,2010.7667,1697.4839)

c_prod_2020 <- t_prod_2020[,-c(5,6)]
cor(c_prod_2020)
             # 합계평균  음·식료품 농축수산물  음식서비스 corona_2020
# 합계평균    1.0000000  0.8093439  0.5993221  0.9330253   0.7940986
# 음·식료품  0.8093439  1.0000000  0.9297845  0.8326552   0.6944005
# 농축수산물  0.5993221  0.9297845  1.0000000  0.6366604   0.5476655
# 음식서비스  0.9330253  0.8326552  0.6366604  1.0000000   0.8468817
# corona_2020 0.7940986  0.6944005  0.5476655  0.8468817   1.0000000

c_prod_2021 <- t_prod_2021[,-c(5,6)]
cor(c_prod_2021)
               # 합계평균 음·식료품 농축수산물 음식서비스 corona_2021
# 합계평균     1.0000000  0.4033817 -0.1238698  0.7016649   0.6169269
# 음·식료품   0.4033817  1.0000000  0.7638137  0.6033798   0.6571880
# 농축수산물  -0.1238698  0.7638137  1.0000000  0.1019419   0.4114138
# 음식서비스   0.7016649  0.6033798  0.1019419  1.0000000   0.8120921
# corona_2021  0.6169269  0.6571880  0.4114138  0.8120921   1.0000000



d_prod_2020 <- c_prod_2020
d_prod_2020$corona <- c_prod_2020$corona_2020
d_prod_2020 <- d_prod_2020[,-5]
year1 <- rep('2020',times=12)
d_prod_2020 <- cbind(d_prod_2020,year=year1)

d_prod_2021 <- c_prod_2021
d_prod_2021$corona <- c_prod_2021$corona_2021
d_prod_2021 <- d_prod_2021[,-5]
year2 <- rep('2021',times=10)
d_prod_2021 <- cbind(d_prod_2021,year=year2)

c_prod_all <- rbind(d_prod_2020,d_prod_2021)




## plotting 


# install.packages("GGally")
# install.packages('nord')
library(tidyverse)
library(nord)
library(GGally)

ggpairs(c_prod_all, columns=1:5, ggplot2::aes(colour=year), 
        title='코로나 확진자 수와 온라인 상품 매출액의 상관관계') +

  scale_color_nord('aurora')+
  scale_fill_nord('aurora')+
  theme_minimal()

# ggpairs(c_prod_2021)
